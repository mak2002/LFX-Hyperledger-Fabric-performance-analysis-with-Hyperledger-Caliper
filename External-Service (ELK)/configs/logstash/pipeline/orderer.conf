input { pipeline { address => ordererLogs } }

filter {
   mutate {
    add_field => {
      "ordererTestField" => "ordererTestFieldValue"
    }
  }

  # Extracting block creation and writing details
  grok {
    match => {
      "fabric_log_message" => [
         # Extracting: block_number, blocks_in_flight, channel_name, node_number
        "Created block \[(?<block_number>\d+)\], there are %{NUMBER:blocks_in_flight:int} blocks in flight channel=%{WORD:channel_name} node=%{NUMBER:node_number:int}",
        # Extracting: block_number, raft_index, channel_name, node_number
        "Writing block \[%{NUMBER:block_number:int}\] \(Raft index: %{NUMBER:raft_index:int}\) to ledger channel=%{WORD:channel_name} node=%{NUMBER:node_number:int}"
      ]
    }
    add_tag => ["blockinfo"]
    tag_on_failure => ["_orderer-blockinfo-extract-failure", "_log-error"]
  }
}

output {
   elasticsearch {
        hosts => ["elasticsearch:9200"]
        ssl => false
        ssl_certificate_verification => false
        sniffing => true
        index => "test-%{+YYYY.MM.dd}"
    }
}