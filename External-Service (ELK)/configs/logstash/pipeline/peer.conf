input {
  pipeline {
    address => peerLogs
  }
}

filter {
  mutate {
    add_field => {
      "peerTestField" => "peerTestFieldValue"
    }
  }

  if [fabric_log_message] =~ /.+ Validated block .+/ {
      grok {
         match => {
            "fabric_log_message" => "%{TIMESTAMP_ISO8601:log_timestamp} %{GREEDYDATA} \[%{WORD:channel_name}\] Validated block \[%{NUMBER:block_number:int}\] in %{NUMBER:processing_time}ms"
         }
         tag_on_failure => ["_orderer-blockinfo-extract-failure", "_log-error"]
      }

      if "_orderer-blockinfo-extract-failure" not in [tags] {
         mutate {
            add_field => {
               "[block_info][id]" => "%{[container_info][service]}-%{channel_name}.%{block_number}"
               "[block_info][validated_block_number]" => "%{block_number}"
               "[block_info][validated_channel_name]" => "%{channel_name}"
               "[block_info][validated_processing_time]" => "%{processing_time}"
               "[block_info][validated_block_timestamp]" => "%{log_timestamp}"
               "[block_info][validationInfo]" => "validationInfo"
            }
         }
         mutate {
            remove_field => ["block_number", "channel_name", "processing_time", "log_timestamp"]
         }  
      }
   } 
   else if [fabric_log_message] =~ /.+ Committed block .+/ {
      grok {
         match => {
            "fabric_log_message" => "%{TIMESTAMP_ISO8601:log_timestamp} %{DATA} \[%{WORD:log_source}\] commit -> \[%{WORD:channel_name}\] Committed block \[%{NUMBER:block_number:int}\] with %{NUMBER:transaction_count} transaction\(s\) in %{NUMBER:duration}ms \(state_validation=%{NUMBER:state_validation}ms block_and_pvtdata_commit=%{NUMBER:block_and_pvtdata_commit}ms state_commit=%{NUMBER:state_commit}ms\) commitHash=\[%{DATA:commitHash}\]"
         }
         tag_on_failure => ["_orderer-blockinfo-extract-failure", "_log-error"]
      }

      if "_orderer-blockinfo-extract-failure" not in [tags] {
         mutate  {
            add_field => {
               "[block_info][id]" => "%{[container_info][service]}-%{channel_name}.%{block_number}"
               "[block_info][committed_block_number]" => "%{block_number}"
               "[block_info][committed_channel_name]" => "%{channel_name}"
               "[block_info][committed_transaction_count]" => "%{transaction_count}"
               "[block_info][committed_block_timestamp]" => "%{log_timestamp}"
               "[block_info][committed_commit_duration]" => "%{duration}"
               "[block_info][committed_state_validation_time]" => "%{state_validation}"
               "[block_info][committed_block_and_pvtdata_commit_time]" => "%{block_and_pvtdata_commit}"
               "[block_info][committed_state_commit_time]" => "%{state_commit}"
               "[block_info][committed_commit_hash]" => "%{commitHash}"
               "[block_info][committmentInfo]" => "committmentInfo"
            }
            remove_field => ["block_number", "channel_name", "transaction_count", "commit_time", "state_validation", "block_and_pvtdata_commit", "state_commit", "log_timestamp", "commitHash", "duration"]
         }
      } 
   } 
   else if [fabric_log_message] =~ /.+ Received block .+/ {
      grok {
         match => {
            "fabric_log_message" => "%{TIMESTAMP_ISO8601:log_timestamp} %{GREEDYDATA} \[%{DATA:log_source}\] %{WORD:log_event} -> Received block \[%{NUMBER:block_number:int}\] from buffer channel=%{WORD:received_channel}"
         }
         tag_on_failure => ["_orderer-blockinfo-extract-failure", "_log-error"]
      }

      if "_orderer-blockinfo-extract-failure" not in [tags] {
         mutate {
            add_field => {
               "[block_info][id]" => "%{[container_info][service]}-%{received_channel}.%{block_number}"
               "[block_info][received_log_timestamp]" => "%{log_timestamp}"
               "[block_info][received_log_event]" => "%{log_event}"
               "[block_info][received_block_number]" => "%{block_number}"
               "[block_info][received_channel]" => "%{received_channel}"
               "[block_info][receivedInfo]" => "receivedInfo"
            }
            remove_field => ["log_timestamp", "channel_name", "log_level", "log_source", "log_event", "block_number", "received_channel"]
         }
      }
   } 
}

output {
  if "_orderer-blockinfo-extract-failure" not in [tags] {
      if [block_info] {
         exec {
            command => "curl -X POST 'http://admin:abc@couchdb:5984/fabric7' -H 'Content-Type: application/json' -d '%{[block_info]}'"
            codec => "json"
         }
         file {
            path => "/usr/share/logstash/mylogs.log"
         }
      }
   }  
}
